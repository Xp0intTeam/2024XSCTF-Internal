/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: message.proto */

#ifndef PROTOBUF_C_message_2eproto__INCLUDED
#define PROTOBUF_C_message_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct MessageRequest MessageRequest;
typedef struct MessageResponse MessageResponse;


/* --- enums --- */


/* --- messages --- */

struct  MessageRequest
{
  ProtobufCMessage base;
  int32_t id;
  char *sender;
  uint32_t len;
  ProtobufCBinaryData content;
  int32_t actionid;
};
#define MESSAGE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&message_request__descriptor) \
    , 0, NULL, 0, {0,NULL}, 0 }


struct  MessageResponse
{
  ProtobufCMessage base;
  int32_t id;
  char *receiver;
  int32_t status_code;
  char *error_message;
};
#define MESSAGE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&message_response__descriptor) \
    , 0, NULL, 0, NULL }


/* MessageRequest methods */
void   message_request__init
                     (MessageRequest         *message);
size_t message_request__get_packed_size
                     (const MessageRequest   *message);
size_t message_request__pack
                     (const MessageRequest   *message,
                      uint8_t             *out);
size_t message_request__pack_to_buffer
                     (const MessageRequest   *message,
                      ProtobufCBuffer     *buffer);
MessageRequest *
       message_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   message_request__free_unpacked
                     (MessageRequest *message,
                      ProtobufCAllocator *allocator);
/* MessageResponse methods */
void   message_response__init
                     (MessageResponse         *message);
size_t message_response__get_packed_size
                     (const MessageResponse   *message);
size_t message_response__pack
                     (const MessageResponse   *message,
                      uint8_t             *out);
size_t message_response__pack_to_buffer
                     (const MessageResponse   *message,
                      ProtobufCBuffer     *buffer);
MessageResponse *
       message_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   message_response__free_unpacked
                     (MessageResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MessageRequest_Closure)
                 (const MessageRequest *message,
                  void *closure_data);
typedef void (*MessageResponse_Closure)
                 (const MessageResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor message_request__descriptor;
extern const ProtobufCMessageDescriptor message_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_message_2eproto__INCLUDED */
