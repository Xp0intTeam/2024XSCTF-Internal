import os
import random
from hashlib import md5
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad
from Crypto.Util.number import *
FLAG = b'XSCTF{Fake_flag}'


def encrypt(m: bytes, key: int) -> bytes:
    iv = os.urandom(16)
    key = long_to_bytes(key)
    key = md5(key).digest()
    cipher = AES.new(key, AES.MODE_CBC, iv=iv)
    return iv + cipher.encrypt(pad(m, AES.block_size))


def f(s, p):
    u = 0
    for i in range(p):
        u += p - i
        u *= s
        u %= p

    return u


p = getPrime(1024)
s = random.randint(1, p - 1)
A = f(s, p)
ciphertext = encrypt(FLAG, s).hex()
print(f"{p = }")
print(f"{A = }")
print(f"{ciphertext = }")
"""
p = 150047847443555551780607383646778335047016817274774459455572118295420220872760843861826572060713763782515891193340180392530495643801084940512366868263554252383596890003894873239311420889498780869512686734074664111786688233786779976225149167699060122695390892886742071588757965095218555236842615070938584224951
A = 51614072930641858258532588732222609622897694793167241294993244884925210558134005443237467321313043942962515267570552991785563189473033043886024990814406068205757425516773042625353457364709443923481317059018116482598994297758122636917351167174984692517164422735383776677374199361980133930130563590387131095237
ciphertext = '83fe4228a3f69df5593e024d00478474115c2fed979508756f6cdc4d88d834afd473c22c9585c147513e0d97097a803c15e85b92f4d35651c1721ce623bfc97b'
"""
